//
//  main.cpp
//  problem29
//
//  Created by Zack Fanning on 12/13/15.
//  Copyright © 2015 Zackluckyf. All rights reserved.
//

/*
 Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
 
 2^2=4, 2^3=8, 2^4=16, 2^5=32
 3^2=9, 3^3=27, 3^4=81, 3^5=243
 4^2=16, 4^3=64, 4^4=256, 4^5=1024
 5^2=25, 5^3=125, 5^4=625, 5^5=3125
 If they are then placed in numerical order, with any repeats removed, 
 we get the following sequence of 15 distinct terms:
 
 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 
 How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
*/

#include <iostream>
#include <chrono>
#include <vector>
#include <math.h>
#include <vector>
#include <string>
#include <set>

int main(int argc, const char * argv[])
{
    auto start = std::chrono::system_clock::now();
    std::set<double> list;
    for (double a = 2; a <= 100; a++)
    {
        for (double b = 2; b <= 100; b++)
        {
            list.insert (pow (a, b));
        }
    }
    std::cout << list.size() << std::endl;

    
    
    
    auto end = std::chrono::system_clock::now();
    auto elapsed = end - start;
    elapsed = std::chrono::duration_cast<std::chrono::milliseconds>(end - start);
    std::cout << elapsed.count() << "ms" << '\n';
    return 0;
}










